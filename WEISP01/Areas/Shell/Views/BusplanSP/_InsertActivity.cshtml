@using ECIS.Client.WEIS
@using Newtonsoft.Json
<style>
    .insert-activity .text {
        width: 200px;
        padding: 5px 8px;
        border: 1px solid rgb(211, 211, 211);
    }

    .insert-activity .check {
        padding: 5px 8px;
        border: 1px solid rgb(211, 211, 211);
    }

    .insert-activity .form-horizontal .form-group {
        margin-bottom: 4px;
    }

        .insert-activity .form-horizontal .form-group .col-md-2 {
            padding-top: 5px;
            padding-right: 0px !important;
        }
    
        .insert-activity .form-horizontal .form-group .col-md-4 {
            padding-left: 6px !important;
        }
</style>

<script>


    $(function () {
        $("#PlanningDays").kendoNumericTextBox({
            format: "n0"
        });
        $("#ScheduleDays").kendoNumericTextBox({
            format: "n0"
        });
    });

    function CalculatingPlanningDays() {
        var start = $("#PsScheduleStart").data("kendoDatePicker").value();
        var finish = $("#PsScheduleFinish").data("kendoDatePicker").value(); //  $("#PsScheduleFinish").val();

        if (start != null && start != "" && finish != null && finish != "") {

            var diffInDays = (finish - start) / (24 * 60 * 60 * 1000);
            console.log(diffInDays);
            $("#PlanningDays").data("kendoNumericTextBox").value(diffInDays);
        }
        else {
            $("#PlanningDays").data("kendoNumericTextBox").value(0);
        }
    }

    function CalculatingoperatingDays() {
        var start = $("#OpsScheduleStart").data("kendoDatePicker").value();
        var finish = $("#OpsScheduleFinish").data("kendoDatePicker").value();

        if (start != null && start != "" && finish != null && finish != "") {
            var diffInDays = (finish - start) / (24 * 60 * 60 * 1000);
            console.log(diffInDays);

            $("#ScheduleDays").data("kendoNumericTextBox").value(diffInDays);
        }
        else {
            $("#ScheduleDays").data("kendoNumericTextBox").value(0);
        }

    }

    function PsScheduleFinishChange() {
        var start = $("#PsScheduleStart").data("kendoDatePicker").value();
        var finish = $("#PsScheduleFinish").data("kendoDatePicker").value();
        var opplandays = $("#PlanningDays").data("kendoNumericTextBox").value();

        if (start != null && start != "" && finish != null && finish != "") {
            var newDateMomentFinish = moment(start).add(opplandays, 'days');
            opfinish = newDateMomentFinish.format("DD-MMM-YYYY");
            $("#PsScheduleFinish").data("kendoDatePicker").value(opfinish);
        }
        else {
            alert('Please choose Planning start/finish');
        }
    }
    function OPsScheduleFinishChange() {

        //alert();
        var start = $("#OpsScheduleStart").data("kendoDatePicker").value();
        var finish = $("#OpsScheduleFinish").data("kendoDatePicker").value();

        console.log(start);

        var opx = $("#ScheduleDays").val();

        if (start != null && start != "" && finish != null && finish != "") {
            var newDateMomentFinish = moment(start).add(opx, 'days');
            opfinish = newDateMomentFinish.format("DD-MMM-YYYY");
            $("#OpsScheduleFinish").data("kendoDatePicker").value(opfinish);
        }
        else {
            alert('Please choose Operation Start/Finish');
        }

    }

    function changeProjectInsertNewPlan() {
        return function () {
            setTimeout(function () {
                var valueOp = "OP15";
                var param = {};
                if (model.SaveToOPData().length >= 0) {
                    valueOp = model.SaveToOPData()[0].dataValue;
                }

                param = {
                    BaseOP: valueOp
                };

                ajaxPost("@Url.Action("GetRFMs")", param, function (res) {

                    model.options.projectReferences = res.Data;
                    var project = $("#projectAdd").data("kendoDropDownList").value();
                    console.log(project);
                    console.log(res.Data);
                    //var filterProject = _.where(model.options.projectReferences, { "ProjectName": project });

                    var filterProject = _.find(model.options.projectReferences, function (data, index) { return data.ProjectName.toUpperCase() == project.toUpperCase() });
                    if (filterProject != undefined) {
                        //console.log(filterProject[0].ReferenceFactorModels);
                        //model.options.RFMs(filterProject[0].ReferenceFactorModels);
                        model.options.RFMs(filterProject.ReferenceFactorModels);

                    } else {
                        model.options.RFMs([]);
                    }
                }, function () {
                    console.log(res);
                });
            }, 100);
            return true;
        }
    }

    model.save = function () {
        var validator = $(".insert-activity form").kendoValidator().data("kendoValidator"),
            status = $(".status");

        if (!validator.validate()) {
            return;
        }

        if (model.IsEditMode() && model.SelectedActivity.UARigSequenceId() === '') {
            alert('Sequence ID cannot be null !');
            return;
        }

        model.IsProcessing(true);
        //alert('asd');

        var eventName = model.SelectedActivity.Activity();
        var virtualPhase = model.SelectedActivity.VirtualPhase();
        var shiftFutureEventDate = model.SelectedActivity.ShiftFutureEventDate();

        console.log(eventName);
        console.log(virtualPhase);
        console.log(shiftFutureEventDate);

        if (virtualPhase == null)
            virtualPhase = false;

        if (shiftFutureEventDate == null)
            shiftFutureEventDate = false;

        var savetoOP = $("#SaveToOP").val();

        if (!model.isNewWell) {
            model.SelectedActivity.WellName()
        }
        JSON.parse(model.SelectedActivity.isInPlan())
        ajaxPost("@Url.Action("SaveActivity")", { wellActivity: model.SelectedActivity, eventName: eventName, virtualPhase: virtualPhase, shiftFutureEventDate: shiftFutureEventDate, isNewWell: model.isNewWell(), saveToOP: savetoOP }, function (res) {

            if (typeof res.Data === 'object') {
                alert(res.Data.Message);
                model.IsProcessing(false);
                return;
            }

            model.ShowInsertActivityForm(false);
            model.selectedPhaseNo(1);
            editWellInfo(res.Data);
            alert("Data Saved!");
            model.IsProcessing(false);

            var ts = $('[data-model="regions"]').data("kendoMultiSelect");
            if (ts != undefined) {
                ts.value([]);
                ts.trigger("change");
                setTimeout(function () {
                    var dsWell = $('[data-model="wellNames"]').data("kendoMultiSelect").dataSource._data;
                    $("#WellNameInside").data("kendoDropDownList").setDataSource(dsWell);
                    $("#WellNameInside").data("kendoDropDownList").value(model.SelectedActivity.WellName());
                }, 1000);

                //$("#WellNameInside").data("kendoDropDownList").setDataSource(dsWell);
                //$("#WellNameInside").data("kendoDropDownList").value(model.SelectedActivity.WellName());
            }

        }, function (a, b, c) {
            var ts = $('[data-model="regions"]').data("kendoMultiSelect");
            if (ts != undefined) {
                ts.value([]);
                ts.trigger("change");
                setTimeout(function () {
                    var dsWell = $('[data-model="wellNames"]').data("kendoMultiSelect").dataSource._data;
                    $("#WellNameInside").data("kendoDropDownList").setDataSource(dsWell);
                    $("#WellNameInside").data("kendoDropDownList").value(model.SelectedActivity.WellName());
                }, 1000);
            }
            alert('Error when saving data: ' + a.Message);
            model.IsProcessing(false);
        });
    };
</script>

<div>
    <button class="btn btn-custom btn-warning btn-sm btn-back" data-bind="click: function() { model.ShowBrowser(true); model.ShowInsertActivityForm(false); model.IsEditMode(false); model.ShowFilter(true);$('.btn.btn-info.btn-sm.catalog').show();$('#grid').data('kendoGrid').refresh()}">
        <span class="glyphicon glyphicon-arrow-left"></span> Back to Browser
    </button>
    &nbsp;
    <button class="btn btn-custom btn-primary btn-sm" data-bind="click: save">
        <span class="glyphicon glyphicon-ok"></span> Save
    </button>
</div>

<h3>Add New Well Plan</h3>

<div data-bind="with: SelectedActivity" class="insert-activity">
    <div class="form-horizontal">
        <form class="k-content">
            <div class="form-group">
                <label class="col-md-2">Region:</label>
                <div class="col-md-4">
                    <select id="regionAdd" style="width: 200px;"
                            required data-required-msg="Select region" name="Region"
                            data-bind="kendoDropDownList: { data: $root.options.regions, value: Region, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="Region"></span>
                </div>
                <label class="col-md-2">OP Start:</label>
                <div class="col-md-4">
                    <input onblur="CalculatingPlanningDays();" id="PsScheduleStart" style="width: 200px;"
                           required data-required-msg="Insert Planning Start" name="PsScheduleStart"
                           data-bind="kendoDatePicker: { format: 'dd-MMM-yyyy', value: PsSchedule.Start } " />
                    <span class="k-invalid-msg" data-for="PsScheduleStart"></span>
                </div>
            </div>
            <div class="form-group">
                @*<label class="col-md-2">Operating Unit:</label>
                <div class="col-md-4">
                    <select id="operatingUnitAdd" style="width: 200px;"
                            required data-required-msg="Select Operating Unit" name="OperatingUnit"
                            data-bind="kendoDropDownList: { data: $root.options.operatingUnits, value: OperatingUnit, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="OperatingUnit"></span>
                </div>*@
                <label class="col-md-2">Line of Business:</label>
                <div class="col-md-4">
                    <select id="regionAdd" style="width: 200px;"
                            required data-required-msg="Select Line of Business" name="LineofBusiness"
                            data-bind="kendoDropDownList: { data: ['ARCTIC','DEEPWATER','INTEGRATED GAS','OPERATED','JV/NOV','UNCONVENTIONALS'], value: LineOfBusiness, optionLabel: 'Select Line of Business'} "></select>
                    <span class="k-invalid-msg" data-for="Region"></span>
                </div>
                
                <label class="col-md-2">OP Finish:</label>
                <div class="col-md-4">
                    <input onblur="CalculatingPlanningDays();" id="PsScheduleFinish" style="width: 200px;"
                           required data-required-msg="Insert Planning Finish" name="PsScheduleFinish"
                           data-bind="kendoDatePicker: { format: 'dd-MMM-yyyy', value: PsSchedule.Finish }" /> <input id="PlanningDays" type="text" value="0" style="width:50px;text-align:right" onblur="PsScheduleFinishChange()" /> days
                    <span class="k-invalid-msg" data-for="PsScheduleFinish"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Rig Type:</label>
                <div class="col-md-4">
                    <select id="rigTypeAdd" style="width: 200px;"
                            required data-required-msg="Select Rig Type" name="RigType"
                            data-bind="kendoDropDownList: { data: $root.options.rigTypes, value: RigType, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="RigType"></span>
                </div>
                <label class="col-md-2">LS Start:</label>
                <div class="col-md-4">
                    <input onblur="CalculatingoperatingDays();" id="OpsScheduleStart" style="width: 200px;"
                           required data-required-msg="Insert Operation Start" name="OpsScheduleStart"
                           data-bind="kendoDatePicker: { format: 'dd-MMM-yyyy', value: OpsSchedule.Start } " />
                    <span class="k-invalid-msg" data-for="OpsScheduleStart"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Rig Name:</label>
                <div class="col-md-4">
                    <select id="rigAdd" style="width: 200px;"
                            required data-required-msg="Select Rig Name" name="RigName"
                            data-bind="kendoDropDownList: { data: $root.options.rigNames, value: RigName, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="RigName"></span>
                </div>
                <label class="col-md-2">LS Finish:</label>
                <div class="col-md-4">
                    <input onblur="CalculatingoperatingDays();" id="OpsScheduleFinish" style="width: 200px;"
                           required data-required-msg="Insert Operation Finish" name="OpsScheduleFinish"
                           data-bind="kendoDatePicker: { format: 'dd-MMM-yyyy', value: OpsSchedule.Finish } " />
                    <input id="ScheduleDays" type="text" value="0" style="width:50px; text-align: right;" onblur="OPsScheduleFinishChange();" /> days
                    <span class="k-invalid-msg" data-for="OpsScheduleFinish"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Project Name:</label>
                <div class="col-md-4">
                    <select id="projectAdd" style="width: 200px;"
                            required data-required-msg="Select Project Name" name="ProjectName"
                            data-bind="kendoDropDownList: { data: $root.options.projectNames, value: ProjectName, optionLabel: 'Select one', change:changeProjectInsertNewPlan()} "></select>
                    <span class="k-invalid-msg" data-for="ProjectName"></span>
                </div>

                <label class="col-md-2">Ref-Factor Model:</label>
                <div class="col-md-4">
                    <select style="width: 200px;" id=""
                            required data-required-msg="Select Ref-Factor Model" name="ReferenceFactorModel"
                            data-bind="kendoDropDownList: { data: $root.options.RFMs, value: ReferenceFactorModel, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="ReferenceFactorModel"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">New Well Name?</label>
                <div class="col-md-4"><input type="checkbox" data-bind="checked:model.isNewWell" /></div>
                @*<label class="col-md-2">Firm/Option:</label>
                <div class="col-md-4">
                    <select style="width: 200px;"
                            required data-required-msg="Select Firm/Option" name="FirmOrOption"
                            data-bind="kendoDropDownList: { data: $root.options.firmOrOptions, value: FirmOrOption, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="FirmOrOption"></span>
                </div>*@
                <label class="col-md-2">In Plan ? :</label>
                
                <div class="col-md-4">
                    <select style="width: 200px;"
                            required data-required-msg="Select In Plan" name="FirmOrOption"
                            data-bind="kendoDropDownList: { data:$root.options.isInPlan, dataTextField: 'name', dataValueField:'id',value:isInPlan}"></select>
                    <span class="k-invalid-msg" data-for="FirmOrOption"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Well Name:</label>
                <div class="col-md-4" data-bind="visible:!model.isNewWell()">
                    <select id="wellAdd" style="width: 200px;"
                            required data-required-msg="Select Well Name"
                            data-bind="kendoDropDownList: { data: $root.options.wellNames, value: WellName} "></select>
                </div>
                <div class="col-md-4" data-bind="visible:model.isNewWell()">
                    <input type="text" style="width:200px;" name="WellName" data-bind="visible:model.isNewWell(),value:WellName" />
                    <span class="k-invalid-msg" data-for="WellName"></span>
                </div>
                <label class="col-md-2">Working Interest:</label>
                <div class="col-md-4">
                    <input class="" style="width: 200px;" placeholder=""
                           required data-required-msg="Insert Working Interest" name="WorkingInterest"
                           data-bind="kendoNumericTextBox:{value: WorkingInterest,min:0,max:100}" />
                    <span class="k-invalid-msg" data-for="WorkingInterest"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Asset Name:</label>
                <div class="col-md-4">
                    <select style="width: 200px;"
                            required data-required-msg="Select Asset Name" name="AssetName"
                            data-bind="kendoDropDownList: { data: $root.options.assetNames, value: AssetName, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="AssetName"></span>
                </div>
                <label class="col-md-2">Sequence ID:</label>
                <div class="col-md-4">
                    <input class="text" style="width: 200px;" placeholder="Example: 1234" data-bind="value: UARigSequenceId" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Performance Unit:</label>
                <div class="col-md-4">
                    <select style="width: 200px;"
                            required data-required-msg="Select Performance Unit" name="PerformanceUnit"
                            data-bind="kendoDropDownList: { data: $root.options.performanceUnits, value: PerformanceUnit, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="PerformanceUnit"></span>
                </div>
                <label class="col-md-2">Sequence Description:</label>
                <div class="col-md-4" style="position: relative">
                    <input class="text" style="width: 200px;" placeholder="Type description here ..." data-bind="value: UARigDescription" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2">Event :</label>
                <div class="col-md-4">
                    <select style="width: 200px;"
                            required data-required-msg="Select Activity" name="Activity"
                            data-bind="kendoDropDownList: { data: model.options.activities, value: Activity, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="Activity"></span>
                </div>

                <label class="col-md-2">Save to OP:</label>
                <div class="col-md-4" style="position: relative">
                    <select style="width: 200px;"
                            required data-required-msg="Select Save To OP" name="SaveToOP" id="SaveToOP"
                            data-bind="kendoDropDownList: { data: model.SaveToOPData,dataTextField:'dataText',dataValueField:'dataValue', value: SaveToOP} "></select>
                    <span class="k-invalid-msg" data-for="SaveToOP"></span>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2">Operating Unit:</label>
                <div class="col-md-4">
                    <select id="operatingUnitAdd" style="width: 200px;"
                            required data-required-msg="Select Operating Unit" name="OperatingUnit"
                            data-bind="kendoDropDownList: { data: $root.options.operatingUnits, value: OperatingUnit, optionLabel: 'Select one'} "></select>
                    <span class="k-invalid-msg" data-for="OperatingUnit"></span>
                </div>
            </div>

            <div class="form-group" data-bind="visible:false">
                <div class="col-md-2"></div>
                <div class="col-md-4">
                </div>

                <label class="col-md-2">Non Well Schedule:</label>
                <div class="col-md-4" style="position: relative">
                    <input class="check" type="checkbox" data-bind="checked : VirtualPhase" />
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group" data-bind="visible:false">
                @*<label class="col-md-2">Shift Future Event Date:</label>*@
                <div class="col-md-2"></div>
                <div class="col-md-4">
                    @*   <input class="check" type="checkbox" />*@
                </div>
                <label class="col-md-2">Shift Future Event Date:</label>
                <div class="col-md-4" style="position: relative">
                    <input class="check" type="checkbox" data-bind="checked : ShiftFutureEventDate" />
                </div>

            </div>

        </form>
    </div>
</div>

<script>
    function ChangeFtr(key) {
        var valReg = [];
        var valOper = [];
        var valRigType = [];
        var _valreg = $("#regionAdd").data("kendoDropDownList").value();
        var _valOper = $("#operatingUnitAdd").data("kendoDropDownList").value();
        var _valRigType = $("#rigTypeAdd").data("kendoDropDownList").value();
        if (_valreg != "")
            valReg.push(_valreg);
        if (_valOper != "")
            valOper.push(_valOper);
        if (_valRigType != "")
            valRigType.push(_valRigType);


        var param = {
            get: ["RigName", "ProjectName", "WellName"],
            key: key,
            operatingUnits: valOper,
            regions: valReg,
            rigTypes: valRigType
        }
        ajaxPost("@Url.Action("GetAvailableFilter","Dashboard")", param, function(res) {
            if (res.Result != "OK") {
                return;
            }
            console.log(res.Data);
            $("#projectAdd").data("kendoDropDownList").setDataSource(res.Data.ProjectNames);
            $("#rigAdd").data("kendoDropDownList").setDataSource(res.Data.RigNames);
            $("#wellAdd").data("kendoDropDownList").setDataSource(res.Data.WellNames);
        });
    }


    $(document).ready(function() {
        $("#regionAdd").change(function () {
            ChangeFtr("Region");
        });
        $("#operatingUnitAdd").change(function () {
            ChangeFtr("OperatingUnit");
        });
        $("#rigTypeAdd").change(function () {
            ChangeFtr("RigType");
        });
    });
</script>