<div>
    <div id="chart-cumulative-panel" style="width:1020px; margin: 0px auto;">
        <div class="mini-nav bordered-mini-nav" style="width: 820px; margin: 0px;">
            <div class="each-nav">
                Select Data Type:
                <select data-bind="value:model.WaterfallFilter.CumulativeDataType">
                    <option value="Total">Improvement + Risk</option>
                    <option value="Improvement">Improvement</option>
                    <option value="Risk">Risk</option>
                </select>
            </div>
            <div class="each-nav">
                View:
                <select data-bind="options: model.YearOptions, value: model.WaterfallFilter.AllocationYear"></select>
            </div>
            <div class="each-nav">
                Base OP:
                <select data-bind="value:$root.WaterfallFilter.BaseOP,options:model.OPs()" style="margin-right: 5px;"></select>
            </div>
            <div class="each-nav checkbox-nav">
                <div>
                    <input type="checkbox" data-bind="checked:$root.WaterfallFilter.ShellShare" />
                </div>
                <div>Calc Shell Share</div>
                <div class="clearfix"></div>
            </div>
            <div class="each-nav checkbox-nav">
                <div>
                    <input type="checkbox" data-bind="checked:$root.WaterfallFilter.Firm" />
                </div>
                <div>Firm</div>
                <div class="clearfix"></div>
            </div>
            <div class="each-nav checkbox-nav">
                <div>
                    <input type="checkbox" data-bind="checked:$root.WaterfallFilter.Option" />
                </div>
                <div>Option</div>
                <div class="clearfix"></div>
            </div>
            <div class="each-nav checkbox-nav">
                <div>
                    <input type="checkbox" data-bind="checked:$root.WaterfallFilter.Blank" />
                </div>
                <div>Blank</div>
                <div class="clearfix"></div>
            </div>
            <div class="each-nav checkbox-nav no-border-nav">
                <div>
                    <input type="checkbox" data-bind="checked:$root.WaterfallFilter.ValidLSOnly" />
                </div>
                <div>Valid LS Only</div>
                <div class="clearfix"></div>
            </div>
            <div class="clearfix"></div>
        </div>
        <div id="chart-cumulative-cost" style="width:1000px;height:200px"></div>
        <br /><br />
        <div id="chart-cumulative-days" style="width:1000px;height:200px"></div>
    </div>
</div>
<script>
    model.ReconfigureCumulativeYearSelection = function (years) {
        var year = model.WaterfallFilter.AllocationYear();
        if (years.indexOf(year) < 0) {
            model.WaterfallFilter.AllocationYear(years[0]);
        }
        model.YearOptions(['All Years'].concat(years));
    };

    model.CumulativeSeriesSchema = {
        Total: {
            Days: [
                { Field: "Days", Name: "Cumulative Days of Improvement and Risk" },
                { Field: "LEDays", Name: "Cumulative Last Estimation Days of Improvement and Risk" },
            ],
            Cost: [
                { Field: "Cost", Name: "Cumulative Cost of Improvement and Risk" },
                { Field: "LECost", Name: "Cumulative Last Estimation Days of Improvement and Risk" },
            ],
        },
        Improvement: {
            Days: [
                { Field: "DaysImprovement", Name: "Cumulative Days of Improvement" },
                { Field: "LEDays", Name: "Cumulative Last Estimation Days of Improvement and Risk" },
            ],
            Cost: [
                { Field: "CostImprovement", Name: "Cumulative Cost of Improvement" },
                { Field: "LECost", Name: "Cumulative Last Estimation Days of Improvement and Risk" },
            ],
        },
        Risk: {
            Days: [
                { Field: "DaysRisk", Name: "Cumulative Days of Risk" },
                { Field: "LEDays", Name: "Cumulative Last Estimation Days of Improvement and Risk" },
            ],
            Cost: [
                { Field: "CostRisk", Name: "Cumulative Cost of Risk" },
                { Field: "LECost", Name: "Cumulative Last Estimation Days of Improvement and Risk" },
            ],
        }
    }

    model.GenerateCumulativeChart = function (which, data) {
        var schema = model.CumulativeSeriesSchema[model.WaterfallFilter.CumulativeDataType()][which];

        var series = [{
            field: schema[0].Field,
            name: schema[0].Name,
            color: (which == "Days" ? "#FF0005" : "#FFD132"),
            labels: {
                position: "insideBase",
                format: "{0:N1}"
            }
        }, {
            type: "line",
            field: schema[1].Field,
            name: schema[1].Name,
            markers: {
                visible: true
            },
            width: 2,
            format: "{0:N1}",
            color: "aqua"
        }];

        var max = 0;

        _.each(data, function (e) {
            var _max = 0;

            for (var f in e) {
                if (e.hasOwnProperty(f)) {
                    var fValue = parseFloat(e[f]);
                    if (!isNaN(fValue) && (String(f).toLowerCase().indexOf("period") < 0)) {
                        if (fValue > _max) {
                            _max = fValue;
                        }
                    }
                }
            }

            if (_max > max)
                max = _max;
        });

        var config = {
            dataSource: {
                data: data,
                sort: { field: "PeriodId" }
            },
            legend: {
                position: "bottom"
            },
            seriesDefaults: {
                labels: {
                    visible: true,
                    font: "9px arial",
                    format: "{0:N1}",
                    background: "transparent"
                }
            },
            series: series,
            valueAxis: {
                labels: {
                    font: "9px arial"
                },
                max: (max * 1.2)
            },
            categoryAxis: {
                field: "PeriodName",
                labels: { font: "9px arial" },
                rotation: 90,
                majorGridLines: { visible: false }
            },
            chartArea: {
                width: 1000,
                height: 200
            }
        };

        var $chart = $("#chart-cumulative-" + which.toLowerCase());
        $chart.kendoChart(config);
    };
</script>
