@using System.Web.Configuration;
<script>
    model.IsProcessing = ko.observable(false);
    //model.UploadDocument().UploadType = ko.observable("file");
    model.UploadDocument = ko.observable({
        UploadDocumentWrapper: ko.observable(false),
        ButtonShowUploadDoc: ko.observable(true),
        DocumentDownloadURL: ko.observable("@Url.Action("DownloadDocument")"),
        Title: ko.observable(""),
        Link: ko.observable(""),
        UploadType: ko.observable("File"),
        Description: ko.observable(""),
        select: function () {

            model.IsProcessing(true);
            var ActivityId = model.ActivityId();

            ajaxPost("@Url.Action("GetDocuments")", { ActivityId: ActivityId },
                function (data) {
                    //console.log(data.Data);
                    model.IsProcessing(false);
                    if (data.Result != "OK") {
                        alert(data.Message);
                        return;
                    }
                    if (data.Data != null) {
                        var ds = new kendo.data.DataSource({
                            data: data.Data.Files,
                            pageSize: 10
                        });

                        $("#grid_uploaded_documents").data("kendoGrid").setDataSource(ds);
                    }
                });
        },
    })

    function ActionDocument(Type, Link, FileNo) {
        if (Type == "File") {
            DownloadDocument(FileNo);
            //return "<button class='btn btn-warning btn-xs' onclick='DownloadDocument(" + FileNo + ")'>Download</button>";
        } else {
            $wrapper = $("#wrapper_hidden");
            $wrapper.html("");
            $("<a />").attr("href", Link).attr("target", "_blank").attr("id", "gotolink").html("go to link").appendTo($wrapper);
            document.getElementById("gotolink").click();
        }
    }

    function GetFileInfo(Type, FileName, Link, FileSize) {
        if (Type == "File") {
            return "<div><span>Type: File</span><br><span>File Name: "+FileName+"</span><br><span>Size: "+FileSize+"</span></div>";
        } else {
            return "<div><span>Type: SharePoint Link</span><br><span>Link: " + Link + "</span></div>";
        }
    }

    var gridUploadedDocuments = [
        { field: "Title", title: "Title", filterable: false },
        { field: "Description", title: "Description", filterable: false },
        {
            field: "_id", title: "File Info", filterable: false,
            template: function (dataItem) {
                if (dataItem.Type == "File") {
                    var info = "<div><strong>Type: </strong>File Upload (" + dataItem.ContentType + ")<br><strong>File Name: </strong>" + dataItem.FileName + "<br><strong>Size: </strong>" + dataItem.FileSize + " bytes</div>";
                } else {
                    var info = "<div><strong>Type: </strong>Share Point Link<br><strong>Link: </strong>" + dataItem.Link + "</div>";
                }
                return info;
            }
            //template: "#: GetFileInfo(Type,FileName,Link,FileSize) #"
        },
        {
            field: "FileNo", title: "Action", filterable: false, width: 100,
            template: function (dataItem) {
                if (dataItem.Type == "File") {
                    return "<button class='btn btn-warning btn-xs' onclick='DownloadDocument(\""+dataItem.FileNo+"\")'>Download</button>"
                } else {
                    return "<a target='_blank' class='btn btn-primary btn-xs' href='" + dataItem.Link + "'>Go To Link</a>";
                }
            }
        },
        { field: "FileNo", width: 100, title: "Delete", filterable: false, template: "<button class='btn btn-danger btn-xs' onclick='DeleteDocument(\"#=FileNo#\")'>Delete</button>" }
    ];

    function DeleteDocument(FileNo) {
        //alert("Under Development");
        var konf = confirm("Are you sure you want to delete this document?");
        if (konf == true) {
            model.IsProcessing(true);
            var ActivityUpdateId = model.ActivityId();
            ajaxPost("@Url.Action("DeleteDocument")", { ActivityUpdateId: ActivityUpdateId, FileNo: FileNo },
            function (data) {
                console.log(data);
                if (data.Success != true) {
                    alert(data.Message);
                    return;
                }
                model.UploadDocument().select();
            });
        } else {
            return false;
        }
    }

    function DownloadDocument(FileNo) {
        @*var ActivityUpdateId = model.ActivityId();
        ajaxPost("@Url.Action("DownloadDocument")", { ActivityUpdateId: ActivityUpdateId, FileNo: FileNo },
        function (data) {
            console.log(data);
        });*@

        var url = '@Url.Action("DownloadDocument")' + "?ActivityUpdateId=" + model.ActivityId() + "&FileNo=" + FileNo;
        document.location.href = url;
    }
</script>

<div class="ec-panel" style="margin-top:10px" data-bind="with:model.UploadDocument">

    <div data-bind="visible: model.IsProcessing()">
        @Html.Partial("_processing")
    </div>

    <div data-bind="visible: !model.IsProcessing()">
        <button class="btn btn-custom btn-primary btn-sm" onclick="openUploadFile();" data-bind="visible:ButtonShowUploadDoc && !model.wrmodel().isRO()=='1'">
            <span class="glyphicon glyphicon-plus"></span> Add Document
        </button>
        <form method="post" enctype="multipart/form-data" id="FormUploadFile" onsubmit="return submitFormUpload();">
            <div class="form-horizontal" style="width:400px;display:none;" id="upload_document_wrapper" data-bind="visible:UploadDocumentWrapper">
                <div class="form-group">
                    <label class="col-sm-2">Title</label>
                    <div class="col-sm-10">
                        <input type="text" class="full" data-bind="value:model.UploadDocument().Title" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Description</label>
                    <div class="col-sm-10">
                        <textarea style="width:100%;height:70px" data-bind="value:model.UploadDocument().Description"></textarea>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Type</label>
                    <div class="col-sm-10">
                        <select data-bind="value:model.UploadDocument().UploadType">
                            <option value="File">File</option>
                            <option value="Link">URL Link</option>
                        </select>
                    </div>
                </div>
                <div class="form-group" data-bind="visible: model.UploadDocument().UploadType() == 'File'">
                    <label class="col-sm-2">File</label>
                    <div class="col-sm-10">
                        <input type="file" class="full" id="fileUpload" />
                    </div>
                </div>
                <div class="form-group" data-bind="visible: model.UploadDocument().UploadType() == 'Link'">
                    <label class="col-sm-2">Link</label>
                    <div class="col-sm-10">
                        <input type="text" class="full" data-bind="value:model.UploadDocument().Link" placeholder="http://" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-10 col-sm-offset-2">
                        <button type="submit" class="btn btn-primary btn-sm">Save File</button>
                        <button type="button" class="btn btn-warning btn-sm" onclick="openUploadFile();">Cancel</button>
                    </div>
                </div>
            </div>
        </form>

        <h3>List of Uploaded Documents</h3>
        <div id="grid_uploaded_documents" data-bind="kendoGrid:{data:[],columns:gridUploadedDocuments,pageable:false,sortable:true,filterable:true}" style="margin-top:10px;"></div>
        <div id="wrapper_hidden" style="display:none;"></div>
    </div>

</div>

<script>


    function openUploadFile() {
        var x = model.UploadDocument();
        if (x.UploadDocumentWrapper() == false) {
            x.UploadDocumentWrapper(true);
            x.ButtonShowUploadDoc(false);
        } else {
            x.UploadDocumentWrapper(false);
            x.ButtonShowUploadDoc(true);
            x.Title("");
            x.Link("");
            x.Description("");
            $("#fileUpload").val("");
        }
    }
</script>

<script>
    //function submitFormUpload() {
        
    //}



    function submitFormUpload() {
        if (model.IsProcessing()) return;
        var formdata = new FormData(); //FormData object
        var x = model.UploadDocument();
        if (x.UploadType() == "File") {
            var fileInput = document.getElementById('fileUpload');
            if (fileInput.files.length == 0) {
                alert("Please select file to be uploaded");
                return false;
            }
            formdata.append("fileUpload", fileInput.files[0]);
        } else {
            var link = model.UploadDocument().Link();
            if (link == "") {
                alert("Please insert the link of the file");
                return false;
            }
        }

        model.IsProcessing(true);
        //console.log(fileInput.files[0]);
        //alert(fileInput.files.length);
        //return false;


        formdata.append("Title", model.UploadDocument().Title());
        formdata.append("Link", model.UploadDocument().Link());
        formdata.append("Type", model.UploadDocument().UploadType());
        formdata.append("Description", model.UploadDocument().Description());
        formdata.append("ActivityId", model.ActivityId());
        //alert("ok");

        console.log(formdata);

        
        //Creating an XMLHttpRequest and sending
        var xhr = new XMLHttpRequest();
        xhr.open('POST', "@Url.Action("UploadSupportingDocuments","WeeklyReport")");
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                //alert(xhr.responseText);
                var x = model.UploadDocument();
                x.Title("");
                x.Description("");
                $("#fileUpload").val("");
                alert("Document successfully uploaded!");
                model.UploadDocument().select();
            }
        }

        return false;
    }
</script>