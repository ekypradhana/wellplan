
@{
    //ViewBag.Title = "GeneratePMaster";
    Layout = "~/Views/Shared/_common_v1.cshtml";
}

@*<h2>GeneratePMaster</h2>*@
<style>
    .modal .modal-body .form-group {
        min-height: 27px;
        margin-bottom: 4px;
    }

        .modal .modal-body .form-group input,
        .modal .modal-body .form-group textarea {
            border-color: #EFEFEF;
        }

        .modal .modal-body .form-group .col-md-4 {
            text-align: right;
            padding-top: 5px;
            padding-right: 0px;
        }
</style>

<script>
    model.PageId("Administration");
    model.IsProcessing = ko.observable(false);
    model.mode = ko.observable("upload");
    model.PageTitle = ko.observable("Generate Planning Report Map (PMaster)");
    model.fileType = ko.observable("filteredData");
    model.changeMode = function (mode) {
    }

    model.ReportingEntity = ko.observable("");
    model.PlanningEntity = ko.observable("");
    model.PlanningEntityId = ko.observable("");
    model.ActivityEntity = ko.observable("");
    model.ActivityEntityId = ko.observable("");
    model.ProbabilityOfSuccess = ko.observable("");

    var uniqueArray = function (a) {
        return a.reduce(function (p, c) {
            if (p.indexOf(c) < 0) p.push(c);
            return p;
        }, []);
    };

    model.renderGridColumnsMonthly = function (data) {
        var gridColumns = [];
        gridColumns.push({
            field: "ReportEntitiy",
            title: "Reporting Entity",
            width: 110
        },
        {
            field: "PlanningEntity",
            title: "Planning Entity",
            width: 110
        }, {
            field: "PlanningEntityID",
            title: "Planning<br/> Entity ID",
            width: 90
        }, {
            field: "ActivityEntity",
            title: "Activity Entity",
            width: 110
        }, {
            field: "ActivityEntityID",
            title: "Activity<br/> Entity ID",
            width: 90
        }, {
            field: "Prob",
            title: "Probability<br/> Of Success",
            width: 90,
            format: "{0} %"
        }, {
            field: "AvgShellShare",
            title: "Average<br/> ShellShare",
            width: 90
        }, {
            field: "Unit",
            title: "Unit",
            width: 80
        }, {
            field: "PMasterField",
            title: "PMaster Field",
            width: 150
        }, {
            field: "PMasterRef",
            title: "PMaster<br/> Reference",
            width: 80
        }
        );

        //var transMonthly = [];
        //var yearMonthly = [];
        //var recordMonthly = data[0].Monthly;
        //var iMonthly = 0;
        //for (var key in recordMonthly) {
        //    if (recordMonthly.hasOwnProperty(key)) {
        //        for (var keyitem in recordMonthly[key]) {
        //            yearMonthly.push(keyitem.split('_')[2]);
        //            transMonthly.push({ field: ("Monthly[" + iMonthly + "]." + keyitem), title: keyitem.split('_')[1], width: 50, format: "{0:N1}", attributes: { style: 'text-align:right;' } });
        //        }
        //        iMonthly++;
        //    }
        //}

        //var yearMonthlyUnique = uniqueArray(yearMonthly);
        //for (var j = 0; j < yearMonthlyUnique.length; j++) {
        //    var tempyearMonthly = [];
        //    for (var i = 0; i < transMonthly.length; i++) {
        //        if (yearMonthlyUnique[j] == transMonthly[i].field.split('.')[1].split('_')[2]) {
        //            tempyearMonthly.push(transMonthly[i]);
        //        }
        //    }
        //    gridColumns.push({ title: yearMonthlyUnique[j], columns: tempyearMonthly });
        //}

        //var recordAnnual = data[0].Annual;
        //var iAnnual = 0;
        //for (var key in recordAnnual) {
        //    if (recordAnnual.hasOwnProperty(key)) {
        //        //alert(key + " -> " + data[0].UIDummyYear[key]);
        //        for (var keyitem in recordAnnual[key]) {
        //            gridColumns.push({ field: ("Annual[" + iAnnual + "]." + keyitem), title: keyitem.split('_')[1], width: 70, format: "{0:N1}", attributes: { style: 'text-align:right;' } });
        //        }
        //        iAnnual++;
        //    }
        //}
        return gridColumns;
    }

    function renderGridUsingData(data) {
        var fieldCol = {};
        var gridCol = model.renderGridColumnsMonthly(data);
        gridCol.forEach(function (xx) {
            if (xx.field == "ReportEntitiy" || xx.field == "PlanningEntity" || xx.field == "ActivityEntity") {
                fieldCol[xx.field] = { type: "string", editable: true };
            } else if (xx.field == "PlanningEntityID" || xx.field == "ActivityEntityID") {
                fieldCol[xx.field] = { type: "number", min:0, editable: true };
            } else if (xx.field == "Prob") {
                fieldCol[xx.field] = { type: "number", min: 0, max: 100, editable: true };
            } else {
                fieldCol[xx.field] = { type: "string", editable: false };
            }
        });

        $('#grid_mpmaster').replaceWith($('<div />').attr('id', 'grid_mpmaster'));
        $('#grid_mpmaster').kendoGrid({
            toolbar: ["excel"],
            excel: { fileName: "Data Monthly.xlsx", allPages: true, filterable: true },
            dataSource: {
                schema: {
                    model: {
                        fields: fieldCol
                    }
                },
                data: data,
                type: "json",
                pageSize: 10
            },
            editable: true,
            pageable: true,
            sortable: true,
            resizable: true,
            columns: gridCol,
            excelExport: function (e) {
                var sheet = e.workbook.sheets[0];
                for (var rowIndex = 0; rowIndex < sheet.rows.length; rowIndex++) {
                    var row = sheet.rows[rowIndex];
                    for (var cellIndex = 0; cellIndex < row.cells.length; cellIndex++) {
                        if (rowIndex == 0) {
                            row.cells[cellIndex].value = row.cells[cellIndex].value.replace("<br/>", "");
                        }
                    }
                }
            }
        });

    }
</script>

<h4 data-bind="text:model.PageTitle"></h4>

<div>
    <div data-bind="visible:!model.IsProcessing()">
        <div class="ec-toolbar">
            <button onclick="model.backpalantir()" class="btn btn-sm btn-warning"><span class="glyphicon glyphicon-arrow-left"></span> Back</button>
        </div>

        <div class="panel-group" id="accordion">
            <div class="panel panel-default">
                <div class="panel-heading" data-toggle="collapse" data-parent="#accordion" href="#collapse1" style="cursor: pointer;">
                    <span class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">Filter</a>
                    </span>
                </div>
                <div id="collapse1" class="panel-collapse collapse in">
                    <div class="panel-body">
                        @Html.Partial("FilterForWaterfall")
                        <div class="col-md-12" style="">
                            <button class="btn btn-success btn-sm" style="margin-right: 10px; float: right" onclick="SaveMapPMaster()"><span class="glyphicon glyphicon-download"></span> Save</button>
                            <button class="btn btn-primary btn-sm" style="margin-right: 10px; float: right" onclick="GenerateMap()"><span class="glyphicon glyphicon-list"></span> Create Planning Map</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-group">
            <div id="grid_mpmaster" class="grid"></div>
        </div>
        @*<div class="col-md-12">
            <div class="">
                <div class="col-md-12">
                    @Html.Partial("FilterForWaterfall")
                </div>
                <div class="col-md-12" style="">
                    <button class="btn btn-success btn-sm" style="margin-right: 50px; float: right" onclick="GenerateMap()"><span class="glyphicon glyphicon-download"></span> Generate</button>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>*@
    </div>
    <div data-bind="visible:model.IsProcessing()">
        @Html.Partial("_processing")
    </div>

    @*<div style="">
        <div class="col-md-12">
            <div class="col-md-4">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <label style=" padding-top: 4px;">Reporting Entity: </label>
                        </div>
                        <div class="col-md-6">
                            <input type="text" id="reportingentity" data-bind="value:ReportingEntity" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <label style=" padding-top: 4px;">Planning Entity: </label>
                        </div>
                        <div class="col-md-6">
                            <input type="text" id="planningentity" data-bind="value:PlanningEntity" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <label style=" padding-top: 4px;">Planning EntityID: </label>
                        </div>
                        <div class="col-md-6">
                            <input type="text" id="planningentityid" data-bind="kendoNumericTextBox: { format: '{N}', min:1, value: PlanningEntityId }" />

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <label style=" padding-top: 4px;">Activity Entity: </label>
                        </div>
                        <div class="col-md-6">
                            <input type="text" id="activityentity" data-bind="value:ActivityEntity" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <label style=" padding-top: 4px;">Activity EntityID: </label>
                        </div>
                        <div class="col-md-6">
                            <input type="text" id="activityentityid" data-bind="kendoNumericTextBox: { format: '{N}', min:1, value: ActivityEntityId }" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <label style=" padding-top: 4px;">Probability Of Success: </label>
                        </div>
                        <div class="col-md-6">
                            <input type="text" id="probabilityofsuccess" data-bind="kendoNumericTextBox: { format: '# \\%', min:0, max:100, value: ProbabilityOfSuccess }" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4" style="">
                <button class="btn btn-success btn-sm" style="margin-right: 50px; float: right" onclick="GenerateMap()"><span class="glyphicon glyphicon-download"></span> Generate</button>
            </div>
        </div>
    </div>*@
</div>

<div class="modal fade" id="modal-add-item"> @*data-bind="with: model.GenerateTransformation">*@
    <div class="modal-dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">&times;</span>
                        <span class="sr-only">Close</span>
                    </button>
                    <h4 class="modal-title">Generate Transformation</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="col-md-4">
                            <label style=" padding-top: 4px;">Reporting Entity: </label>
                        </div>
                        <div class="col-md-8">
                            <input type="text" id="reportingentity" data-bind="value:ReportingEntity" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4">
                            <label style=" padding-top: 4px;">Planning Entity: </label>
                        </div>
                        <div class="col-md-8">
                            <input type="text" id="planningentity" data-bind="value:PlanningEntity" />
                        </div>
                    </div>                    
                    <div class="form-group">
                        <div class="col-md-4">
                            <label style=" padding-top: 4px;">Planning EntityID: </label>
                        </div>
                        <div class="col-md-8">
                            @*<input type="text" id="planningentityid" data-bind="value:PlanningEntityId" />*@
                            <input type="text" id="planningentityid" data-bind="kendoNumericTextBox: { format: '{N}', min:1, value: PlanningEntityId }" />

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            <label style=" padding-top: 4px;">Activity Entity: </label>
                        </div>
                        <div class="col-md-8">
                            <input type="text" id="activityentity" data-bind="value:ActivityEntity" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4">
                            <label style=" padding-top: 4px;">Activity EntityID: </label>
                        </div>
                        <div class="col-md-8">
                            @*<input type="text" id="activityentityid" data-bind="value:ActivityEntityId" />*@
                            <input type="text" id="activityentityid" data-bind="kendoNumericTextBox: { format: '{N}', min:1, value: ActivityEntityId }" />
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            <label style=" padding-top: 4px;">Probability Of Success: </label>
                        </div>
                        <div class="col-md-8">
                            <input type="text" id="probabilityofsuccess" data-bind="kendoNumericTextBox: { format: '# \\%', min:0, max:100, value: ProbabilityOfSuccess }" />
                        </div>
                    </div>

                    <div class="clearfix">&nbsp;</div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-custom btn-warning" data-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-sm btn-custom btn-primary" data-bind="click: RunTransformation">
                        <span class="glyphicon glyphicon-refresh"></span> Run
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    model.backpalantir = function () {
        var url = "@Url.Action("ReportMonthPMaster", "palantir")";

        location.href = url;
    }

    model.FilterVisibility.PerformanceUnits(false);
    model.FilterVisibility.MonthlySequence(false);
    //model.FilterVisibility.YearsCalc(true);

    model.FilterVisibility.Activities(true);
    model.FilterVisibility.OPs(true);
    model.FilterVisibility.OpRelation(true);
    model.FilterVisibility.Date(true);
    model.FilterVisibility.Date2(true);
    model.FilterVisibility.PeriodBase(false);
    model.FilterVisibility.PeriodView(true);
    model.FilterVisibility.PeriodRelation(false);

    function SaveMapPMaster() {
        var grid = $("#grid_mpmaster").data("kendoGrid");
        var data = grid.dataSource.data();
        //data.forEach(function(e) {
        //    delete e.CapexSummary;
        //});
        ajaxPost("@Url.Action("SavePlanPmaster")", { list: data }, function(res) {
            if (res.Result == "NOK") {
                alert(res.Message);
                return;
            }
            alert("Map PMaster Generated");
        }, function() {

        });
    }

    function GenerateMap() {
        $("#modal-add-item").modal("show");

        @*if (model.ReportingEntity() == "" || model.PlanningEntity() == "" || model.PlanningEntityId() == "" || model.ActivityEntity() == "" || model.ActivityEntityId() == "" || model.ProbabilityOfSuccess() == "") {
            alert("Please define all!");
            return;
        }
        var param = model.getFilterValues();
        param.reportingEntity = model.ReportingEntity();
        param.planningEntity = model.PlanningEntity();
        param.plannEntityID = model.PlanningEntityId();
        param.activityEntity = model.ActivityEntity();
        param.activityEntityID = model.ActivityEntityId();
        param.probabilityofSuccess = model.ProbabilityOfSuccess();
        param.report = "pmastermonthly";

        model.IsProcessing(true);
        var url ="@Url.Action("GeneratePMasterReport", "Palantir")";
        ajaxPost(url,param,function(data){
            model.IsProcessing(false);
            if (data.Data.Status == "NOK") {
                alert(data.Data.Message);
                return;
            }
            alert("New Map has been succesfully generated!");
        }, function (err) {
            model.IsProcessing(false);
            alert(err)
        })*@
    }

    function RunTransformation() {
        if (model.ReportingEntity() == "" || model.PlanningEntity() == "" || model.PlanningEntityId() == "" || model.ActivityEntity() == "" || model.ActivityEntityId() == "" || model.ProbabilityOfSuccess() == "") {
            alert("Please define all!");
            return;
        }

        $("#modal-add-item").modal("hide");
        var param = model.getFilterValues();
        param.reportingEntity = model.ReportingEntity();
        param.planningEntity = model.PlanningEntity();
        param.plannEntityID = model.PlanningEntityId();
        param.activityEntity = model.ActivityEntity();
        param.activityEntityID = model.ActivityEntityId();
        param.probabilityofSuccess = model.ProbabilityOfSuccess();
        param.report = "pmastermonthly";

        @*model.IsProcessing(true);
        var url ="@Url.Action("GeneratePMasterReport", "Palantir")";
        ajaxPost(url, param, function (data) {
            model.IsProcessing(false);
            if (data.Data.Status == "NOK") {
                alert(data.Data.Message);
                return;
            }
            alert("New Map has been succesfully generated!");
        }, function (err) {
            model.IsProcessing(false);
            alert(err)
        });*@

        model.IsProcessing(true);
        var url = "@Url.Action("GenerateMapPMaster", "Palantir")";
        ajaxPost(url, param, function (data) {
            model.IsProcessing(false);
            if (data.Data.Status == "NOK") {
                alert(data.Data.Message);
                return;
            }
            renderGridUsingData(data.Data);
        }, function (err) {
            model.IsProcessing(false);
            alert(err)
        });
    }

    $(document).ready(function () {
        $(".do-filter").hide();
    });

</script>


