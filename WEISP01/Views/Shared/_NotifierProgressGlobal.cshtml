<script>
    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-bottom-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300000",
        "hideDuration": "1000",
        "timeOut": "300000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    }

    model.IsUploadLSRunning = ko.observable(false);
    model.GetCalculationStatusGlobal = function () {
        
        var DoGetCalculationStatus = function () {

            ajaxPost("@Url.Action("CheckProcess", "WellPIP", new { Area = "Shell" })", {},

                function (res) {
                    //$("#toast-container").remove();
                    if (res.Data.length > 0) {
                        model.IsUploadLSRunning(true);
                        var executeButtons = $(".load-weis-button");
                        executeButtons.each(function(idxx, e) {
                            $(e).prop("disabled", true);
                        });

                        if ($("#toast-container").size() == 0) {
                            toastr["info"]("UPLOAD LS is running. Some features will be disabled for a while.");
                        }

                        if ($(".toast-message:first").find("span").size() == 0) {
                            $(".toast-message:first").append("<span style='padding-left: 5px;'></span>");
                        }
                        setTimeout(function () {
                            DoGetCalculationStatus();
                        }, 5000);
                    } else {
                        model.IsUploadLSRunning(false);
                        var a = $("#toast-container");
                        if (a.size() > 0) {
                            var b = a.find(".toast-message");
                            var bhtm = b.html();
                            console.log(bhtm);
                            if (bhtm.indexOf("Financial Calendar") > 1) { // berarti fiscal jalan. gak usah di matikan
                                return;
                            }
                            $("#toast-container").remove();
                            var executeButtons = $(".load-weis-button");
                            executeButtons.each(function (idxx, e) {
                                $(e).prop("disabled", false);
                            });
                            if (typeof alerter != "undefined") {
                                alerter();
                            }
                        }
                    }
                }, function() {
                    alert("Internal Server Error!");
                }
            );
                 

                // if (model.FinancialCalendar.StatusProgress() == "Done" && model.FinancialCalendar.StatusProgress() == "Empty") {
                //    $("#toast-container").remove();
                //    $(".btn.btn-xs.btn-primary.btn-custom.btn-initiate").prop("disabled", false);
                //    model.FinancialCalendar.GetData()
                //    //toastr["success"]("Recalculation process finished.");
                //    //setTimeout(function () {
                //    //    $("#toast-container").remove();
                //    //}, 3000);
                //}
            
        };

        DoGetCalculationStatus();
    };
</script>

<style>
    #toast-container * {
        opacity: 1 !important;
    }
</style>